// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VentasApp.Infrastructure.Persistence;

namespace VentasApp.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Application.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("IdentificationCard")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("Lastlogin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Domain.Entities.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaseId")
                        .HasColumnType("int");

                    b.Property<int>("ContableId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Detalle")
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Observacion")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Referencia")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TipoCatalogo")
                        .HasColumnType("char(1)");

                    b.Property<string>("UnidadMedidaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ClaseId");

                    b.HasIndex("ContableId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("MarcaId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("articulos");
                });

            modelBuilder.Entity("Domain.Entities.Caja", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("cajas");
                });

            modelBuilder.Entity("Domain.Entities.Ciudad", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("DepartamentoId")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("ciudades");
                });

            modelBuilder.Entity("Domain.Entities.Clase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("clases");
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoRetenedorSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Cupo")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("DeclaranteSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<decimal>("DescuentoComercial")
                        .HasColumnType("decimal(28,2)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListaPrecioId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("RepresentanteVentas")
                        .HasColumnType("int");

                    b.Property<string>("ReteFteSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("ReteFuenteId")
                        .HasColumnType("int");

                    b.Property<int>("ReteFuenteServiciosId")
                        .HasColumnType("int");

                    b.Property<int>("ReteIcaId")
                        .HasColumnType("int");

                    b.Property<string>("ReteIcaSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("ReteIcaServiciosId")
                        .HasColumnType("int");

                    b.Property<string>("ReteIvaSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("TipoCompradorId")
                        .HasColumnType("int");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("RepresentanteVentas");

                    b.HasIndex("ReteFuenteId");

                    b.HasIndex("ReteFuenteServiciosId");

                    b.HasIndex("ReteIcaId");

                    b.HasIndex("ReteIcaServiciosId");

                    b.HasIndex("TipoCompradorId");

                    b.HasIndex("ZonaId");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Domain.Entities.Compañia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Autorretenedor")
                        .HasColumnType("bit");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerceroId");

                    b.ToTable("compañias");
                });

            modelBuilder.Entity("Domain.Entities.Consecutivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Descripcion")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("NroActual")
                        .HasColumnType("int");

                    b.Property<string>("NroResolucion")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<int>("NumeroFin")
                        .HasColumnType("int");

                    b.Property<int>("NumeroInicio")
                        .HasColumnType("int");

                    b.Property<string>("Prefijo")
                        .HasColumnType("varchar(45)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("consecutivos");
                });

            modelBuilder.Entity("Domain.Entities.Contable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImpoConsumoId")
                        .HasColumnType("int");

                    b.Property<int>("IvaCompraId")
                        .HasColumnType("int");

                    b.Property<int>("IvaVentaId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("ImpoConsumoId");

                    b.HasIndex("IvaCompraId");

                    b.HasIndex("IvaVentaId");

                    b.ToTable("contables");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasMaxLength(80);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("departamentos");
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(2)");

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cantidad")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("DescComercial")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ImpoConsumoId")
                        .HasColumnType("int");

                    b.Property<int>("IvaId")
                        .HasColumnType("int");

                    b.Property<int>("ListaPrecioId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("PorImpoConsumo")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("PorcentajeIva")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("PorcentajeReteIca")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("PorcentajeRtfte")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<int>("ReteFuenteId")
                        .HasColumnType("int");

                    b.Property<int>("ReteIcaId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ValorLista")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VentaBruta")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.Property<decimal>("VlrDescuento")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrImpoConsumo")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrIva")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrRteIcaC")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrRteIcaS")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrRtfteC")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("VlrRtfteS")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ImpoConsumoId");

                    b.HasIndex("IvaId");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("ReteFuenteId");

                    b.HasIndex("ReteIcaId");

                    b.HasIndex("UnidadId");

                    b.HasIndex("VentaId");

                    b.ToTable("detallesventas");
                });

            modelBuilder.Entity("Domain.Entities.DocumentoIdentificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.ToTable("documentosidentificacion");
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedioPago")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("formapagos");
                });

            modelBuilder.Entity("Domain.Entities.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("grupos");
                });

            modelBuilder.Entity("Domain.Entities.ImpoConsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.ToTable("impoconsumos");
                });

            modelBuilder.Entity("Domain.Entities.Iva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.ToTable("ivas");
                });

            modelBuilder.Entity("Domain.Entities.Lista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("ModificarPrecioSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.HasKey("Id");

                    b.ToTable("listas");
                });

            modelBuilder.Entity("Domain.Entities.ListaPrecio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListaId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal?>("Precio")
                        .IsRequired()
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("UnidadMedidaId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("ListaId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("listaprecios");
                });

            modelBuilder.Entity("Domain.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("Domain.Entities.MedioPago", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("mediospagos");
                });

            modelBuilder.Entity("Domain.Entities.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("paises");
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AutoRetenedorSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Cupo")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("DeclaranteSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<decimal>("DescuentoComercial")
                        .HasColumnType("decimal(28,2)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ListaPrecioId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<int>("RepresentanteVentaId")
                        .HasColumnType("int");

                    b.Property<string>("ReteFteSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("ReteFuenteId")
                        .HasColumnType("int");

                    b.Property<int>("ReteFuenteServiciosId")
                        .HasColumnType("int");

                    b.Property<int>("ReteIcaId")
                        .HasColumnType("int");

                    b.Property<string>("ReteIcaSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("ReteIcaServiciosId")
                        .HasColumnType("int");

                    b.Property<string>("ReteIvaSN")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("TipoProveedorId")
                        .HasColumnType("int");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ListaPrecioId");

                    b.HasIndex("RepresentanteVentaId");

                    b.HasIndex("ReteFuenteId");

                    b.HasIndex("ReteFuenteServiciosId");

                    b.HasIndex("ReteIcaId");

                    b.HasIndex("ReteIcaServiciosId");

                    b.HasIndex("TipoProveedorId");

                    b.HasIndex("ZonaId");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("Domain.Entities.Regimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("regimenes");
                });

            modelBuilder.Entity("Domain.Entities.RepVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Comision")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MetaVenta")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasColumnType("varchar(90)");

                    b.Property<int>("TerceroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TerceroId");

                    b.ToTable("repventas");
                });

            modelBuilder.Entity("Domain.Entities.ReteFuente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("CuentaC")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaDC")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaDV")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaV")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DeclaranteSN")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("TipoCatalogo")
                        .HasColumnType("char(1)");

                    b.Property<decimal>("Tope")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.ToTable("retefuentes");
                });

            modelBuilder.Entity("Domain.Entities.ReteIca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("CuentaC")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaDC")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaDV")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CuentaV")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("DeclaranteSN")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<string>("TipoCatalogo")
                        .HasColumnType("char(1)");

                    b.Property<decimal>("Tope")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.ToTable("reteicas");
                });

            modelBuilder.Entity("Domain.Entities.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("varchar(25)");

                    b.Property<string>("CiudadUbicacion")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("DigitoVerificacion")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Direccion")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("DocumentoId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("NombreComercial")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NroDocumento")
                        .IsRequired()
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("varchar(60)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("RegimenId")
                        .HasColumnType("int");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Telefono")
                        .HasColumnType("varchar(25)");

                    b.Property<int>("TipoPersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CiudadUbicacion");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("RegimenId");

                    b.HasIndex("TipoPersonaId");

                    b.ToTable("tercero");
                });

            modelBuilder.Entity("Domain.Entities.TipoComprador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("tipocompradores");
                });

            modelBuilder.Entity("Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("tiposdocumentos");
                });

            modelBuilder.Entity("Domain.Entities.TipoPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("tipospersonas");
                });

            modelBuilder.Entity("Domain.Entities.TipoProveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("tipoproveedores");
                });

            modelBuilder.Entity("Domain.Entities.UnidadMedida", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("unidadesmedidas");
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BaseIva")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<int?>("CajaId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("DsctoComer")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("DsctoProd")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("MunicipioId")
                        .HasColumnType("varchar(5)");

                    b.Property<string>("NroFactura")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepVentaId")
                        .HasColumnType("int");

                    b.Property<string>("Resolucion")
                        .HasColumnType("varchar(200)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAutoRetencion")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalBruto")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalOtrRetencion")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalPagar")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalReteIcaC")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalReteIcaS")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalReteIva")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalRetefuenteC")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("TotalRetefuenteS")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("ValorImpConsumo")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("ValorIva")
                        .HasColumnType("decimal(28, 2)");

                    b.Property<decimal>("ValorVenta")
                        .HasColumnType("decimal(28, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CajaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("MunicipioId");

                    b.HasIndex("RepVentaId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("Domain.Entities.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("zonas");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes");
                });

            modelBuilder.Entity("IdentityServer4.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasMaxLength(50000);

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubjectId")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Key");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.ToTable("PersistedGrants");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUserRole<string>");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Nombre")
                        .HasColumnType("varchar(40)")
                        .HasMaxLength(40);

                    b.Property<int?>("Padre")
                        .HasColumnType("int");

                    b.Property<int?>("PaginaId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("Url")
                        .HasColumnType("varchar(70)")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("PaginaId");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationMenuRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("menusroles");
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationPagina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Proyecto")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("paginas");
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Detalle")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MenuRoleId")
                        .HasColumnType("int");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Slug")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("MenuRoleId");

                    b.ToTable("ApplicationPermission");
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ConsultaDatagrid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Pagina")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SentenciaCount")
                        .IsRequired()
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("SentenciaTable")
                        .IsRequired()
                        .HasColumnType("nvarchar(3000)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ConsultaDatagrid");
                });

            modelBuilder.Entity("Domain.Entities.Application.ApplicationRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Access")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("varchar(15)")
                        .HasMaxLength(15);

                    b.ToTable("AspNetRoles");

                    b.HasDiscriminator().HasValue("ApplicationRole");
                });

            modelBuilder.Entity("Domain.Entities.Application.ApplicationUserRole", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUserRole<string>");

                    b.Property<string>("CreadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("UserId1");

                    b.ToTable("AspNetUserRoles");

                    b.HasDiscriminator().HasValue("ApplicationUserRole");
                });

            modelBuilder.Entity("Domain.Entities.Articulo", b =>
                {
                    b.HasOne("Domain.Entities.Clase", "Clase")
                        .WithMany()
                        .HasForeignKey("ClaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Contable", "Contable")
                        .WithMany()
                        .HasForeignKey("ContableId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Ciudad", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.HasOne("Domain.Entities.Lista", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RepVenta", "RepVenta")
                        .WithMany()
                        .HasForeignKey("RepresentanteVentas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteFuente", "ReteFuente")
                        .WithMany()
                        .HasForeignKey("ReteFuenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteFuente", "ReteFuenteServicios")
                        .WithMany()
                        .HasForeignKey("ReteFuenteServiciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteIca", "ReteIca")
                        .WithMany()
                        .HasForeignKey("ReteIcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteIca", "ReteIcaServicios")
                        .WithMany()
                        .HasForeignKey("ReteIcaServiciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoComprador", "TipoComprador")
                        .WithMany()
                        .HasForeignKey("TipoCompradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Compañia", b =>
                {
                    b.HasOne("Domain.Entities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Consecutivo", b =>
                {
                    b.HasOne("Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Contable", b =>
                {
                    b.HasOne("Domain.Entities.ImpoConsumo", "ImpoConsumo")
                        .WithMany()
                        .HasForeignKey("ImpoConsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Iva", "IvaCompra")
                        .WithMany()
                        .HasForeignKey("IvaCompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Iva", "IvaVenta")
                        .WithMany()
                        .HasForeignKey("IvaVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Domain.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.DetalleVenta", b =>
                {
                    b.HasOne("Domain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ImpoConsumo", "ImpoConsumo")
                        .WithMany()
                        .HasForeignKey("ImpoConsumoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Iva", "Iva")
                        .WithMany()
                        .HasForeignKey("IvaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ListaPrecio", "ListaPrecio")
                        .WithMany()
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteFuente", "ReteFuente")
                        .WithMany()
                        .HasForeignKey("ReteFuenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteIca", "ReteIca")
                        .WithMany()
                        .HasForeignKey("ReteIcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.Venta", "Venta")
                        .WithMany()
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.ListaPrecio", b =>
                {
                    b.HasOne("Domain.Entities.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Lista", "Lista")
                        .WithMany()
                        .HasForeignKey("ListaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany()
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Domain.Entities.Proveedor", b =>
                {
                    b.HasOne("Domain.Entities.Lista", "Lista")
                        .WithMany()
                        .HasForeignKey("ListaPrecioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.RepVenta", "RepVenta")
                        .WithMany()
                        .HasForeignKey("RepresentanteVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteFuente", "ReteFuente")
                        .WithMany()
                        .HasForeignKey("ReteFuenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteFuente", "ReteFuenteServicios")
                        .WithMany()
                        .HasForeignKey("ReteFuenteServiciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteIca", "ReteIca")
                        .WithMany()
                        .HasForeignKey("ReteIcaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.ReteIca", "ReteIcaServicios")
                        .WithMany()
                        .HasForeignKey("ReteIcaServiciosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoProveedor", "TipoProveedor")
                        .WithMany()
                        .HasForeignKey("TipoProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Zona", "Zona")
                        .WithMany()
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.RepVenta", b =>
                {
                    b.HasOne("Domain.Entities.Tercero", "Tercero")
                        .WithMany()
                        .HasForeignKey("TerceroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Tercero", b =>
                {
                    b.HasOne("Domain.Entities.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("CiudadUbicacion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.DocumentoIdentificacion", "DocumentoIdentificacion")
                        .WithMany()
                        .HasForeignKey("DocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Regimen", "Regimen")
                        .WithMany()
                        .HasForeignKey("RegimenId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoPersona", "TipoPersona")
                        .WithMany()
                        .HasForeignKey("TipoPersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Venta", b =>
                {
                    b.HasOne("Domain.Entities.Caja", "Caja")
                        .WithMany()
                        .HasForeignKey("CajaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Ciudad", "Ciudad")
                        .WithMany()
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Domain.Entities.RepVenta", "RepVenta")
                        .WithMany()
                        .HasForeignKey("RepVentaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Domain.Entities.Application.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Domain.Entities.Application.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_AspNetUserRoles_AspNetRoles_RoleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Application.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Domain.Entities.Application.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationMenu", b =>
                {
                    b.HasOne("VentasApp.Domain.Entities.Application.ApplicationPagina", "Pagina")
                        .WithMany()
                        .HasForeignKey("PaginaId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationMenuRole", b =>
                {
                    b.HasOne("VentasApp.Domain.Entities.Application.ApplicationMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Application.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VentasApp.Domain.Entities.Application.ApplicationPermission", b =>
                {
                    b.HasOne("VentasApp.Domain.Entities.Application.ApplicationMenuRole", "MenuRole")
                        .WithMany()
                        .HasForeignKey("MenuRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Application.ApplicationUserRole", b =>
                {
                    b.HasOne("Domain.Entities.Application.ApplicationRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Application.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
